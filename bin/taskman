#!/usr/bin/env php
<?php
// Hack: \Phar::running() cannot be used reliably here to determine
// if we are running as a phar or not (works when phar is built with
// box, but does not work when phar is built with the Robo phar task.)
// We will use __FILE__ to determine our phar path; however, we cannot
// distinguish whether a __FILE__ of "/path/robo" is this file, or a
// 'robo.phar' that has been renamed to 'robo'.  We will use the file
// size to differentiate.
// Recommendation: Use box to build your phar. See https://github.com/g1a/starter
//  Non-phar autoloader paths
$composer = file_exists('composer.json') ? json_decode(file_get_contents('composer.json'), true) : [];
$composer += ['config' => []];
$composer['config'] += ['vendor-dir' => getcwd() . '/vendor'];

$candidates = [
    $composer['config']['vendor-dir'] . '/autoload.php',
    getcwd() . '/vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php',
    __DIR__ . '/../../autoload.php',
    __DIR__ . '/../../../autoload.php',
];

if (filesize(__FILE__) > 500000) {
    array_unshift($candidates, 'phar://robo.phar/vendor/autoload.php');
}

$autoloaderPath = false;
foreach ($candidates as $candidate) {
    if (file_exists($candidate)) {
        $autoloaderPath = $candidate;
        break;
    }
}

if (!$autoloaderPath) {
  die("Could not find autoloader. Run 'composer install'.");
}

$classLoader = require $autoloaderPath;

$runner = new \PhpTaskman\Core\Runner(null, null, $classLoader);

exit($runner->run($_SERVER['argv']));
